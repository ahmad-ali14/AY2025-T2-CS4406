{"version":3,"file":"index-DV0WnRJ2.js","sources":["../../src/unit5/code.ts"],"sourcesContent":["import * as THREE from \"three\";\nimport { createBaseScene } from \"../utils/createBaseScene\";\nimport { createTextSprite } from \"../utils/createTextSprite\";\n\nconst {\n    render,\n    scene,\n    directionalLight,\n    renderer,\n    canvas,\n    camera,\n    shouldShowLabels,\n    shouldShowWireframe,\n    sidebar,\n    addHelpNote,\n} = createBaseScene({\n    sceneTitle: \"Unit 5: Methane Molecule\",\n    cameraZ: window.innerHeight * 20,\n    cameraFov: 90,\n    defaultLightColor: \"#ffffff\",\n    showAxes: false,\n    showGrid: false,\n});\n\nconst bondLength = 200; // bond length, a base for  other sizes and positions\nconst carbonRadius = bondLength / 2;\nconst hydrogenRadius = bondLength / 6;\n\nconst carbonAtomGeometry = new THREE.SphereGeometry(carbonRadius, 32, 32);\nconst carbonAtomMaterial = new THREE.MeshStandardMaterial({\n    color: THREE.Color.NAMES.red,\n});\nconst carbon___Atom = new THREE.Mesh(carbonAtomGeometry, carbonAtomMaterial);\n\nconst hydrogenAtomGeometry = new THREE.SphereGeometry(hydrogenRadius, 32, 32);\nconst hydrogenAtomMaterial = new THREE.MeshStandardMaterial({\n    color: THREE.Color.NAMES.blue,\n});\n\nconst hydrogenAtom1 = new THREE.Mesh(\n    hydrogenAtomGeometry,\n    hydrogenAtomMaterial,\n);\nconst hydrogenAtom2 = new THREE.Mesh(\n    hydrogenAtomGeometry,\n    hydrogenAtomMaterial,\n);\nconst hydrogenAtom3 = new THREE.Mesh(\n    hydrogenAtomGeometry,\n    hydrogenAtomMaterial,\n);\nconst hydrogenAtom4 = new THREE.Mesh(\n    hydrogenAtomGeometry,\n    hydrogenAtomMaterial,\n);\n\nconst bondGeometry = new THREE.CylinderGeometry(10, 10, bondLength, 32);\nconst bondMaterial = new THREE.MeshStandardMaterial({\n    color: THREE.Color.NAMES.white,\n});\n\nconst bond1 = new THREE.Mesh(bondGeometry, bondMaterial);\nconst bond2 = new THREE.Mesh(bondGeometry, bondMaterial);\nconst bond3 = new THREE.Mesh(bondGeometry, bondMaterial);\nconst bond4 = new THREE.Mesh(bondGeometry, bondMaterial);\n\nconst spriteScale = [100, 100, 1] as [number, number, number];\nconst crLabel = createTextSprite(\"C\", { scale: [200, 200, 1] });\nconst h1Label = createTextSprite(\"H1\", { scale: spriteScale });\nconst h2Label = createTextSprite(\"H2\", { scale: spriteScale });\nconst h3Label = createTextSprite(\"H3\", { scale: spriteScale });\nconst h4Label = createTextSprite(\"H4\", { scale: spriteScale });\n\n// simplify variable name\nconst bl = bondLength;\n\n/**\n * After creating the atoms and bond meshes by assembling their geometries and materials,\n * We need to position them on the scene properly.\n * `atomPositions` is an array that holds x, y, z components for the position of each atom.\n * `bondPositions` is an array that holds \"the initial\"  x, y, z components for the position of each bond.\n */\n\n// prettier-ignore\nconst atomPositions = {\n    carbon: [bl *  0,       bl * 1.25,     bl *  0],\n    h1:     [bl *  1.125,   bl * 1,        bl *  0],\n    h2:     [bl * -1.125,   bl * 1,        bl *  0],\n    h3:     [bl *  0,       bl * 1,        bl *  1],\n    h4:     [bl *  0,       bl * 1.625,    bl * -1],\n} as const;\n\n// prettier-ignore\nconst bondPositions = {\n    bond1:  [bl *  0.625,   bl * 1.125,    bl *  0],\n    bond2:  [bl * -0.625,   bl * 1.125,    bl *  0],\n    bond3:  [bl *  0,       bl * 1.25,     bl *  0.5],\n    bond4:  [bl *  0,       bl * 1.25,     bl * -0.5],\n} as const;\n\ncarbon___Atom.position.set(...atomPositions.carbon);\nhydrogenAtom1.position.set(...atomPositions.h1);\nhydrogenAtom2.position.set(...atomPositions.h2);\nhydrogenAtom3.position.set(...atomPositions.h3);\nhydrogenAtom4.position.set(...atomPositions.h4);\n\ncrLabel.position.set(...atomPositions.carbon);\nh1Label.position.set(...atomPositions.h1);\nh2Label.position.set(...atomPositions.h2);\nh3Label.position.set(...atomPositions.h3);\nh4Label.position.set(...atomPositions.h4);\n\nbond1.position.set(...bondPositions.bond1);\nbond2.position.set(...bondPositions.bond2);\nbond3.position.set(...bondPositions.bond3);\nbond4.position.set(...bondPositions.bond4);\n\n/**\n * In order to see the shadow properly, we need to create a plane that will act as the ground.\n * the following creates a wide plane and position it below the molecule.\n */\nconst planeGeometry = new THREE.PlaneGeometry(100 * 1000, 100 * 1000);\nconst planeMaterial = new THREE.MeshStandardMaterial({\n    color: THREE.Color.NAMES.black,\n    side: THREE.DoubleSide,\n});\nconst plane = new THREE.Mesh(planeGeometry, planeMaterial);\nplane.rotation.x = Math.PI / 2;\nplane.position.y = -bondLength * 1.7;\n\n/**\n * In order to rotate the entire molecule as one object, we need to group all the objects together.\n * This gives us a single mesh that we can control.\n */\nconst moleculeGroup = new THREE.Group();\nmoleculeGroup.add(\n    carbon___Atom,\n    hydrogenAtom1,\n    hydrogenAtom2,\n    hydrogenAtom3,\n    hydrogenAtom4,\n    bond1,\n    bond2,\n    bond3,\n    bond4,\n    crLabel,\n    h1Label,\n    h2Label,\n    h3Label,\n    h4Label,\n);\n\nscene.add(moleculeGroup, plane); // add necessary objects to the scene\n\n/**\n * Handling shadows:\n * - configure necessary objects to cast and receive shadows.\n * - configure the directional light position and other properties.\n * - set the light source at the top left corner of the canvas.\n * - configure the shadow camera properties.\n */\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\ndirectionalLight.color = new THREE.Color(THREE.Color.NAMES.green); // set a yellow color\nconst top = canvas.height / 2;\nconst left = -canvas.width / 2;\ndirectionalLight.position.set(left * 1.5, top * 2, -100); // set the position of the light to the top left corner\ndirectionalLight.visible = true; // ensure the light is visible\ndirectionalLight.intensity = 100;\ndirectionalLight.castShadow = true; // enable shadow casting from this light\nplane.receiveShadow = true;\nplane.castShadow = false; // disable shadow casting\n\ncarbon___Atom.castShadow = true;\nhydrogenAtom1.castShadow = true;\nhydrogenAtom2.castShadow = true;\nhydrogenAtom3.castShadow = true;\nhydrogenAtom4.castShadow = true;\nbond1.castShadow = true;\nbond2.castShadow = true;\nbond3.castShadow = true;\nbond4.castShadow = true;\n\ncarbon___Atom.receiveShadow = false;\nhydrogenAtom1.receiveShadow = false;\nhydrogenAtom2.receiveShadow = false;\nhydrogenAtom3.receiveShadow = false;\nhydrogenAtom4.receiveShadow = false;\nbond1.receiveShadow = false;\nbond2.receiveShadow = false;\nbond3.receiveShadow = false;\nbond4.receiveShadow = false;\n\ndirectionalLight.shadow.camera.near = 1;\ndirectionalLight.shadow.camera.far = 5000;\ndirectionalLight.shadow.camera.left = -1000;\ndirectionalLight.shadow.camera.right = 1000;\ndirectionalLight.shadow.camera.top = 1000;\ndirectionalLight.shadow.camera.bottom = -1000;\n\ncamera.position.set(300, 1000, 200); // setting a good angle to see more of scene.\ncamera.lookAt(carbon___Atom.position); // look at the carbon atom by default\n\n// orientation of the bond cylinder\n// the cylinders perpendicular to the sphere's surface and at the center of them\nconst reOrientBond = (params: {\n    bond: THREE.Mesh;\n    carbon: THREE.Mesh;\n    hydrogen: THREE.Mesh;\n}) => {\n    const { bond, carbon, hydrogen } = params;\n    const carbonPosition = carbon.position;\n    const hydrogenPosition = hydrogen.position;\n\n    const direction = new THREE.Vector3()\n        .subVectors(hydrogenPosition, carbonPosition)\n        .normalize();\n\n    const distanceCH = carbonPosition.distanceTo(hydrogenPosition);\n    const bondAdjustedLength = distanceCH - (carbonRadius + hydrogenRadius);\n\n    // Position the bond: start at carbon surface, move half the bond length along direction\n    const bondCenterOffset = carbonRadius + bondAdjustedLength / 2;\n    bond.position\n        .copy(carbonPosition)\n        .add(direction.clone().multiplyScalar(bondCenterOffset));\n\n    bond.quaternion.setFromUnitVectors(new THREE.Vector3(0, 1, 0), direction);\n};\n\nreOrientBond({ bond: bond1, carbon: carbon___Atom, hydrogen: hydrogenAtom1 });\nreOrientBond({ bond: bond2, carbon: carbon___Atom, hydrogen: hydrogenAtom2 });\nreOrientBond({ bond: bond3, carbon: carbon___Atom, hydrogen: hydrogenAtom3 });\nreOrientBond({ bond: bond4, carbon: carbon___Atom, hydrogen: hydrogenAtom4 });\n\n/**\n * Scene controls:\n * - Stop/Start the rotation of the molecule.\n * - Adjust the speed of rotation.\n * - Change the axis of rotation.\n * - Change the direction of rotation.\n * - Reset the rotation of the molecule.\n */\nlet shouldRotate = true;\nlet rotationSpeed = 0.01;\nlet rotationAxis = \"y\";\nlet rotationDirection = 1;\n\nconst sceneOptionsDiv = document.createElement(\"div\");\nsceneOptionsDiv.classList.add(\"mb-4\");\n\nsceneOptionsDiv.innerHTML = `\n    <hr class=\"border border-b-[#000] mb-2\" />\n    <h2 class=\"text-xl font-bold text-center mb-2\">Scene Options</h2>\n    <div class=\"flex flex-col space-y-2 text-lg\">\n        <div>\n            <input type=\"checkbox\" id=\"rotate\" checked>\n            <label for=\"rotate\" class=\"font-bold\">Rotate</label>\n        </div>\n        <div>\n            <label for=\"rotationSpeed\" class=\"font-bold\">Rotation Speed</label>\n            <input type=\"range\" id=\"rotationSpeed\" min=\"0\" max=\"0.1\" step=\"0.01\" value=\"0.01\">\n        </div>\n        <div>\n            <label for=\"rotationAxis\" class=\"font-bold\">Rotation Axis</label>\n            <select id=\"rotationAxis\" class=\"min-w-20 ml-2\">\n                <option value=\"x\">x</option>\n                <option value=\"y\" selected>y</option>\n                <option value=\"z\">z</option>\n            </select>\n        </div>\n        <div class=\"\">\n            <label for=\"rotationDirection\" class=\"font-bold\">Rotation Direction</label>\n            <select id=\"rotationDirection\">\n                <option value=\"1\">Clockwise</option>\n                <option value=\"-1\">Counter Clockwise</option>\n            </select>\n        </div>\n        <div>\n            <button id=\"resetRotation\" class=\"bg-blue-500 text-white p-2 rounded-md text-sm\">Reset Rotation</button>\n        </div>\n    </div>\n    `;\n\nsidebar.appendChild(sceneOptionsDiv);\n\nconst rotateCheckbox = document.getElementById(\"rotate\") as HTMLInputElement;\nconst rotationSpeedInput = document.getElementById(\n    \"rotationSpeed\",\n) as HTMLInputElement;\nconst rotationAxisSelect = document.getElementById(\n    \"rotationAxis\",\n) as HTMLSelectElement;\nconst rotationDirectionSelect = document.getElementById(\n    \"rotationDirection\",\n) as HTMLSelectElement;\n\nrotateCheckbox.checked = shouldRotate;\nrotationSpeedInput.value = rotationSpeed.toString();\nrotationAxisSelect.value = rotationAxis;\nrotationDirectionSelect.value = rotationDirection.toString();\n\nrotateCheckbox.addEventListener(\"change\", () => {\n    shouldRotate = rotateCheckbox.checked;\n});\n\nrotationSpeedInput.addEventListener(\"input\", () => {\n    rotationSpeed = parseFloat(rotationSpeedInput.value);\n});\n\nrotationAxisSelect.addEventListener(\"change\", () => {\n    rotationAxis = rotationAxisSelect.value;\n});\n\nrotationDirectionSelect.addEventListener(\"change\", () => {\n    rotationDirection = parseInt(rotationDirectionSelect.value);\n});\n\nconst rotateMolecule = () => {\n    if (shouldRotate) {\n        moleculeGroup.rotation[rotationAxis as \"x\" | \"y\" | \"z\"] +=\n            rotationSpeed * rotationDirection;\n    }\n};\n\nconst resetCubeRotation = () => {\n    shouldRotate = false;\n    rotateCheckbox.checked = false;\n    moleculeGroup.rotation.set(0, 0, 0);\n};\n\nconst resetRotationButton = document.getElementById(\n    \"resetRotation\",\n) as HTMLButtonElement;\nresetRotationButton.addEventListener(\"click\", resetCubeRotation);\n\n// grouping objects for easier control and manipulation\nconst labels = [crLabel, h1Label, h2Label, h3Label, h4Label];\nconst materials = [\n    carbonAtomMaterial,\n    hydrogenAtomMaterial,\n    bondMaterial,\n    planeMaterial,\n];\n\nconst animate = () => {\n    requestAnimationFrame(animate);\n\n    rotateMolecule();\n\n    labels.forEach((label) => {\n        label.visible = shouldShowLabels();\n    });\n\n    materials.forEach((material) => {\n        material.wireframe = shouldShowWireframe();\n    });\n\n    render();\n};\n\nanimate();\n\naddHelpNote({\n    title: \"Scene Options\",\n    description: \"These options are specified for this scene:\",\n    points: [\n        \"Rotate: Start/Stop the rotation of the mesh.\",\n        \"Rotation Speed: Adjust the speed of rotation. Default is 0.01.\",\n        \"Rotation Axis: Change the axis of rotation, the shape will rotate around this axis.\",\n        \"Rotation Direction: Change the direction of rotation. Default is clockwise.\",\n        \"Reset Rotation: Stop the rotation and reset the shape's rotation to the last state before rotation started.\",\n    ],\n});\n"],"names":["render","scene","directionalLight","renderer","canvas","camera","shouldShowLabels","shouldShowWireframe","sidebar","addHelpNote","createBaseScene","bondLength","carbonRadius","hydrogenRadius","carbonAtomGeometry","THREE.SphereGeometry","carbonAtomMaterial","THREE.MeshStandardMaterial","THREE.Color","carbon___Atom","THREE.Mesh","hydrogenAtomGeometry","hydrogenAtomMaterial","hydrogenAtom1","hydrogenAtom2","hydrogenAtom3","hydrogenAtom4","bondGeometry","THREE.CylinderGeometry","bondMaterial","bond1","bond2","bond3","bond4","spriteScale","crLabel","createTextSprite","h1Label","h2Label","h3Label","h4Label","bl","atomPositions","bondPositions","planeGeometry","THREE.PlaneGeometry","planeMaterial","THREE.DoubleSide","plane","moleculeGroup","THREE.Group","THREE.PCFSoftShadowMap","top","left","reOrientBond","params","bond","carbon","hydrogen","carbonPosition","hydrogenPosition","direction","THREE.Vector3","bondAdjustedLength","bondCenterOffset","shouldRotate","rotationSpeed","rotationAxis","rotationDirection","sceneOptionsDiv","rotateCheckbox","rotationSpeedInput","rotationAxisSelect","rotationDirectionSelect","rotateMolecule","resetCubeRotation","resetRotationButton","labels","materials","animate","label","material"],"mappings":"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"}